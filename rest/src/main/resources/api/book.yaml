openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8090
    description: Generated server url
tags:
  - name: books
    description: Operations related to books
paths:
  /api/books/{id}:
    get:
      tags:
        - books
      summary: Get a book by ID
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Book found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
    put:
      tags:
        - books
      summary: Update a book by ID
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
    delete:
      tags:
        - books
      summary: Delete a book by ID
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Book deleted
        '404':
          description: Book not found
  /api/books:
    get:
      tags:
        - books
      summary: Get all books
      operationId: getAll
      parameters:
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDTOBookDTO'
    post:
      tags:
        - books
      summary: Create a book
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookDTO'
        required: true
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookDTO'
components:
  schemas:
    BookDTO:
      required:
        - author
        - genre
        - title
      type: object
      properties:
        id:
          type: integer
          description: Book ID
          format: int32
        title:
          maxLength: 100
          minLength: 0
          type: string
          description: Book title
        author:
          maxLength: 100
          minLength: 0
          type: string
          description: Book author
        genre:
          maxLength: 100
          minLength: 0
          type: string
          description: Book genre
    PaginatedDTOBookDTO:
      type: object
      properties:
        items:
          type: array
          description: List of items
          items:
            $ref: '#/components/schemas/BookDTO'
        size:
          type: integer
          description: Page size
          format: int32
        offset:
          type: integer
          description: Page offset
          format: int32
        records:
          type: integer
          description: Total number of records
          format: int64
        pages:
          type: integer
          description: Total number of pages
          format: int32
